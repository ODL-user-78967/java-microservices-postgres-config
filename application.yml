# COMMON APPLICATION PROPERTIES
# embedded database init, supports mysql too trough the 'mysql' spring profile
spring:
datasource:
    url: jdbc:postgresql://postgres-petclinic-876241.postgres.database.azure.com:5432/petclinic?sslmode=require
    username: myadmin
    password: admin@123
sql:
   init:
      schema-locations: classpath*:db/mysql/schema.sql
      data-locations: classpath*:db/mysql/data.sql
      mode: ALWAYS
sleuth:
   sampler:
      probability: 1.0
cloud:
   config:
      # Allow the microservices to override the remote properties with their own System properties or config file
      allow-override: true
      # Override configuration with any local property source
      override-none: true
jpa:
   open-in-view: false
   hibernate:
      ddl-auto: update
   properties:
      hibernate.dialect: org.hibernate.dialect.PostgreSQLDialect
# Enable detailed logging for SQL, Hibernate, and JDBC
logging:
  level:
    org.springframework: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    org.springframework.jdbc.core: DEBUG
    org.springframework.transaction: DEBUG
    com.zaxxer.hikari: DEBUG  # For database connection pooling

# Enable Spring Boot startup logs
logging:
  level:
    org.springframework.boot: TRACE

# Enable logs for SQL schema and data initialization
logging:
  level:
    org.springframework.jdbc.datasource.init.ScriptUtils: DEBUG


# Spring Boot 1.5 makes actuator secure by default
management.security.enabled: false
# Enable all Actuators and not only the two available by default /health and /info starting Spring Boot 2.0
management.endpoints.web.exposure.include: "*"

# Temporary hack required by the Spring Boot 2 / Spring Cloud Finchley branch
# Waiting issue https://github.com/spring-projects/spring-boot/issues/13042
spring.cloud.refresh.refreshable: false


# enable health probes
management.health.livenessState.enabled: true
management.health.readinessState.enabled: true
management.endpoint.health.probes.enabled: true

# Metrics
management:
endpoint:
   metrics:
      enabled: true
   prometheus:
      enabled: true
endpoints:
   web:
      exposure:
      include: '*'
metrics:
   export:
      prometheus:
      enabled: true
eureka:
client:
   serviceUrl:
      defaultZone: http://discovery-server:8761/eureka/
   enableSelfPreservation: true
   registryFetchIntervalSeconds: 20
instance:
   preferIpAddress: true
